@inject HttpClient Http
@inject NavigationManager navigationManager
@using System.Text.Json;


<div class="container" style="background: white; max-width: 700px; ">

    <div class="row">

        <div class="col-12">
            <br />
            <div class="align_center">
                <h3 style="color: #2b3940">
                    Recuperando Clave

                </h3>
                <p style="font-size: 15px;font-weight: bold;">Establecer tu nueva clave.</p>
            </div>

        </div>
    </div>
</div>

<br />
<div class="container" style="background: white; max-width: 1000px; min-width:200px">

    <div class="row">

        <div class="col-12" style="box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); border-radius: 4px; margin: 10px 10px 10px 10px; padding: 15px; ">
            <br />
            <EditForm Model="cambiarContraseñaModelo" OnValidSubmit="validar" class="form_type_1 type_2">
                <DataAnnotationsValidator />

                <div class="row">
                    <div class="col-md-4" style="margin-bottom:10px">
                        <label style="font-size: 15px; font-weight: bold; color: #2b3940 ">Clave Nueva</label>
                    </div>
                    <div class="col-md-8" style="margin-bottom:20px">
                        @*<InputText style="color: #000000; " class="cambio_color" id="id_resp" placeholder="Escribir"
                                   @bind-Value="@cambiarContraseñaModelo.ClaveNueva" />*@

                        <div class="container_interno" style=" max-width: 700px; width: 100%;">
                            <div class="wrapp-input" style="position: relative; width: 100%; min-height: 50px;">
                                <span class="icon-aye" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;" @onclick="TogglePasswordVisibility">
                                    <i style="color:black" class="@PasswordIcon"></i>
                                </span>

                                <InputText @bind-Value="@cambiarContraseñaModelo.ClaveNueva"
                                           style="color: #000000; background: transparent; text-align: left; width: 100%; border: 1px solid #4e4e4e; line-height: inherit; height: 40px; padding: 10px 15px; -webkit-transition: all .3s ease; -o-transition: all .3s ease; transition: all .3s ease;"
                                           type="@isPassword"
                                           id="id_resp"
                                           class="id_resp"
                                           placeholder="Introducir la Clave Nueva" />

                            </div>


                        </div>
                        <ValidationMessage For="@(() => cambiarContraseñaModelo.ClaveNueva)" />
                    </div>


                    <div class="col-lg-12" style="margin-bottom:-20px"><br></div>
                    @*esta es de las respuesta*@
                    <div class="col-md-4" style="margin-bottom:10px">
                        <label style="font-size: 15px; font-weight: bold; color: #2b3940 ">Repetir Clave</label>
                    </div>

                    <div class="col-md-8" style="margin-bottom:10px">
                        @*<InputText disable="true" style="color: #000000;" class="cambio_color" id="id_resp" placeholder="Escribir" @bind-Value="@cambiarContraseñaModelo.RepetirClave" />*@
                        <div class="container_interno" style=" max-width: 700px; width: 100%;">
                            <div class="wrapp-input" style="position: relative; width: 100%; min-height: 50px;">
                                <span class="icon-aye" style="position: absolute; right: 10px; top: 50%; transform: translateY(-50%); cursor: pointer;" @onclick="TogglePasswordVisibility_1">
                                    <i style="color:black" class="@PasswordIcon_1"></i>
                                </span>

                                <InputText @bind-Value="@cambiarContraseñaModelo.RepetirClave"
                                           style="color: #000000; background: transparent; text-align: left; width: 100%; border: 1px solid #4e4e4e; line-height: inherit; height: 40px; padding: 10px 15px; -webkit-transition: all .3s ease; -o-transition: all .3s ease; transition: all .3s ease;"
                                           type="@isPassword_1"
                                           id="id_resp"
                                           class="id_resp"
                                           placeholder="Repita la Clave" />

                            </div>


                        </div>
                        <ValidationMessage For="@(() => cambiarContraseñaModelo.RepetirClave)" />
                    </div>

                    <div class="col-md-4">
                        <br />
                        <div class="align_center">
                            <button type="submit" class="button type1" style="width:100%">
                                <span><span style="color:white">Recuperar</span><span>Recuperar</span></span>
                            </button>

                        </div>
                    </div>

                </div>


                <br />

            </EditForm>




        </div>
    </div>
</div>

@code {

    [Parameter] public int idUsuario { get; set; }

    CambiarContraseaDto cambiarContraseñaModelo = new CambiarContraseaDto();


    private bool IsPasswordVisible { get; set; } = false;
    private string PasswordIcon => IsPasswordVisible ? "fa fa-eye-slash" : "fa fa-eye";
    private string isPassword => IsPasswordVisible ? "text" : "password";


    private void TogglePasswordVisibility()
    {
        IsPasswordVisible = !IsPasswordVisible;
    }

    private bool IsPasswordVisible_1 { get; set; } = false;
    private string PasswordIcon_1 => IsPasswordVisible_1 ? "fa fa-eye-slash" : "fa fa-eye";
    private string isPassword_1 => IsPasswordVisible_1 ? "text" : "password";


    private void TogglePasswordVisibility_1()
    {
        IsPasswordVisible_1 = !IsPasswordVisible_1;
    }

    private async Task validar()
    {
        cambiarContraseñaModelo.IdUsuario = idUsuario;
        var response = await Http.PostAsJsonAsync("api/Usuarios/cambiar/password/pregunta", cambiarContraseñaModelo);
        if (response.IsSuccessStatusCode)
        {


            Respuesta respuesta = JsonSerializer.Deserialize<Respuesta>(await response.Content.ReadAsStringAsync());


            if (respuesta.res == "true")
            {

                navigationManager.NavigateTo("iniciar-sesion");
            }
            else
            {

            }


        }
        else
        {

        }
    }

}
